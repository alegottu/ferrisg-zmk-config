// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define NAV_L 1
#define GAME_L 2
#define NUM_L 3
#define SYM_L 4

// Quick tap for repeating characters on hold-tap keys
&lt { quick_tap_ms = <200>; };

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow mods";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            quick_tap_ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &kp Q      &kp W       &kp E       &kp R          &kp T         &kp Y            &kp U          &kp I       &kp O       &kp P
                &hm LGUI A &hm LCTRL S &hm LALT D  &hm LSHFT F    &kp G         &kp H            &hm RSHFT J    &hm RALT K  &hm LCTRL L &hm LGUI SEMI
                &kp Z      &kp X       &kp C       &kp V          &kp B         &kp N            &kp M          &kp COMMA   &kp DOT     &kp FSLH
                                                   &lt NAV_L TAB  &mt LSHFT RET &lt NUM_L SPACE  &lt SYM_L BKSP
            >;
        };

        nav_layer {
            bindings = <
                &kp ESC    &trans     &trans      &trans          &trans       &trans           &kp C_PP       &kp C_PREV  &kp C_NEXT &to 2
                &trans     &trans     &trans      &trans          &trans       &kp LARW         &kp DARW       &kp UARW    &kp RARW   &trans
                &trans     &trans     &trans      &trans          &trans       &trans           &kp HOME       &kp PG_DN   &kp PG_UP  &kp END
                                                  &trans          &trans       &trans           &kp DEL
            >;
        };

        game_layer {
            bindings = <
                &kp TAB      &kp Q      &kp W       &kp E         &kp R        &kp Y            &kp U          &kp I       &kp O       &to 0
                &kp LSHFT    &kp A      &kp S       &kp D         &kp F        &kp H            &kp J          &kp K       &kp L       &kp SEMI
                &kp LCTRL    &kp Z      &kp X       &kp C         &kp V        &kp N            &kp M          &kp COMMA   &kp DOT     &kp FSLH
                                                    &kp RET       &kp SPACE    &kp LALT         &kp ESC
            >;
        };

        num_layer {
            bindings = <
                &kp KP_LPAR  &kp KP_N7   &kp KP_N8   &kp KP_N9    &kp KP_MINUS &kp KP_SLASH    &kp F9         &kp F10     &kp F11     &kp F12
                &kp KP_RPAR  &kp KP_N4   &kp KP_N5   &kp KP_N6    &kp KP_PLUS  &kp KP_ASTERISK &kp F5         &kp F6      &kp F7      &kp F8
                &kp KP_NLCK  &kp KP_N1   &kp KP_N2   &kp KP_N3    &kp KP_DOT   &kp KP_COMMA    &kp F1         &kp F2      &kp F3      &kp F4
                                                     &kp KP_EQUAL &kp KP_N0    &trans          &trans
            >;
        };

        sym_layer {
            bindings = <
                &kp EXCL      &kp AT      &kp HASH    &kp DLLR   &kp PRCNT      &kp CARET      &kp AMPS       &kp STAR    &kp LPAR   &kp RPAR
                &kp TILDE     &trans      &trans      &trans     &trans         &kp PIPE       &kp PLUS       &kp EQUAL   &kp LBRC   &kp RBRC
                &kp GRAVE     &trans      &trans      &trans     &trans         &kp BSLH       &kp MINUS      &kp UNDER   &kp LBKT   &kp RBKT
                                                      &kp DQT    &kp APOS       &trans         &trans
            >;
        };
    };
};
